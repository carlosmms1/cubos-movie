/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as authLayoutRouteImport } from './routes/(auth)/_layout'
import { Route as appLayoutRouteImport } from './routes/(app)/_layout'
import { Route as appLayoutIndexRouteImport } from './routes/(app)/_layout/index'
import { Route as appLayoutMovieIdRouteImport } from './routes/(app)/_layout/$movieId'
import { Route as authLayoutSignUpIndexRouteImport } from './routes/(auth)/_layout/sign-up/index'
import { Route as authLayoutSignInIndexRouteImport } from './routes/(auth)/_layout/sign-in/index'

const authRouteImport = createFileRoute('/(auth)')()
const appRouteImport = createFileRoute('/(app)')()

const authRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const appRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const authLayoutRoute = authLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)
const appLayoutRoute = appLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => appRoute,
} as any)
const appLayoutIndexRoute = appLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appLayoutRoute,
} as any)
const appLayoutMovieIdRoute = appLayoutMovieIdRouteImport.update({
  id: '/$movieId',
  path: '/$movieId',
  getParentRoute: () => appLayoutRoute,
} as any)
const authLayoutSignUpIndexRoute = authLayoutSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authLayoutRoute,
} as any)
const authLayoutSignInIndexRoute = authLayoutSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appLayoutIndexRoute
  '/$movieId': typeof appLayoutMovieIdRoute
  '/sign-in': typeof authLayoutSignInIndexRoute
  '/sign-up': typeof authLayoutSignUpIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof appLayoutIndexRoute
  '/$movieId': typeof appLayoutMovieIdRoute
  '/sign-in': typeof authLayoutSignInIndexRoute
  '/sign-up': typeof authLayoutSignUpIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteWithChildren
  '/(app)/_layout': typeof appLayoutRouteWithChildren
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_layout': typeof authLayoutRouteWithChildren
  '/(app)/_layout/$movieId': typeof appLayoutMovieIdRoute
  '/(app)/_layout/': typeof appLayoutIndexRoute
  '/(auth)/_layout/sign-in/': typeof authLayoutSignInIndexRoute
  '/(auth)/_layout/sign-up/': typeof authLayoutSignUpIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$movieId' | '/sign-in' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$movieId' | '/sign-in' | '/sign-up'
  id:
    | '__root__'
    | '/(app)'
    | '/(app)/_layout'
    | '/(auth)'
    | '/(auth)/_layout'
    | '/(app)/_layout/$movieId'
    | '/(app)/_layout/'
    | '/(auth)/_layout/sign-in/'
    | '/(auth)/_layout/sign-up/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRoute: typeof appRouteWithChildren
  authRoute: typeof authRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/_layout': {
      id: '/(auth)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof authRoute
    }
    '/(app)/_layout': {
      id: '/(app)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appLayoutRouteImport
      parentRoute: typeof appRoute
    }
    '/(app)/_layout/': {
      id: '/(app)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appLayoutIndexRouteImport
      parentRoute: typeof appLayoutRoute
    }
    '/(app)/_layout/$movieId': {
      id: '/(app)/_layout/$movieId'
      path: '/$movieId'
      fullPath: '/$movieId'
      preLoaderRoute: typeof appLayoutMovieIdRouteImport
      parentRoute: typeof appLayoutRoute
    }
    '/(auth)/_layout/sign-up/': {
      id: '/(auth)/_layout/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authLayoutSignUpIndexRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/_layout/sign-in/': {
      id: '/(auth)/_layout/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authLayoutSignInIndexRouteImport
      parentRoute: typeof authLayoutRoute
    }
  }
}

interface appLayoutRouteChildren {
  appLayoutMovieIdRoute: typeof appLayoutMovieIdRoute
  appLayoutIndexRoute: typeof appLayoutIndexRoute
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  appLayoutMovieIdRoute: appLayoutMovieIdRoute,
  appLayoutIndexRoute: appLayoutIndexRoute,
}

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(
  appLayoutRouteChildren,
)

interface appRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

interface authLayoutRouteChildren {
  authLayoutSignInIndexRoute: typeof authLayoutSignInIndexRoute
  authLayoutSignUpIndexRoute: typeof authLayoutSignUpIndexRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutSignInIndexRoute: authLayoutSignInIndexRoute,
  authLayoutSignUpIndexRoute: authLayoutSignUpIndexRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface authRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  appRoute: appRouteWithChildren,
  authRoute: authRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
